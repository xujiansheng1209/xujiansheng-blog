import comp from "/Users/ruby/idea_demo/xujiansheng-blog/docs/.vuepress/.temp/pages/cs-basics/data-structure/the-sword-refers-to-offer.html.vue"
const data = JSON.parse("{\"path\":\"/cs-basics/data-structure/the-sword-refers-to-offer.html\",\"title\":\"剑指offer部分编程题\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"剑指offer部分编程题\",\"category\":\"计算机基础\",\"tag\":[\"算法\"],\"description\":\"斐波那契数列 题目描述： 大家都知道斐波那契数列，现在要求输入一个整数 n，请你输出斐波那契数列的第 n 项。 n<=39 问题分析： 可以肯定的是这一题通过递归的方式是肯定能做出来，但是这样会有一个很大的问题，那就是递归大量的重复计算会导致内存溢出。另外可以使用迭代法，用 fn1 和 fn2 保存计算过程中的结果，并复用起来。下面我会把两个方法示例代...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://snailcoding.cn/cs-basics/data-structure/the-sword-refers-to-offer.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"蜗牛のJava宝典\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"剑指offer部分编程题\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"斐波那契数列 题目描述： 大家都知道斐波那契数列，现在要求输入一个整数 n，请你输出斐波那契数列的第 n 项。 n<=39 问题分析： 可以肯定的是这一题通过递归的方式是肯定能做出来，但是这样会有一个很大的问题，那就是递归大量的重复计算会导致内存溢出。另外可以使用迭代法，用 fn1 和 fn2 保存计算过程中的结果，并复用起来。下面我会把两个方法示例代...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:image\",\"content\":\"https://oss.javaguide.cn/p3-juejin/844773c7300e4373922bb1a6ae2a55a3~tplv-k3u1fbpfcp-zoom-1.png\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"name\":\"twitter:card\",\"content\":\"summary_large_image\"}],[\"meta\",{\"name\":\"twitter:image:alt\",\"content\":\"剑指offer部分编程题\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Mr.Xu\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"算法\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"剑指offer部分编程题\\\",\\\"image\\\":[\\\"https://oss.javaguide.cn/p3-juejin/844773c7300e4373922bb1a6ae2a55a3~tplv-k3u1fbpfcp-zoom-1.png\\\",\\\"https://oss.javaguide.cn/github/javaguide/cs-basics/algorithms/5985000.jpg\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Mr.Xu\\\",\\\"url\\\":\\\"https://snailcoding.cn\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"斐波那契数列\",\"slug\":\"斐波那契数列\",\"link\":\"#斐波那契数列\",\"children\":[]},{\"level\":2,\"title\":\"跳台阶问题\",\"slug\":\"跳台阶问题\",\"link\":\"#跳台阶问题\",\"children\":[]},{\"level\":2,\"title\":\"变态跳台阶问题\",\"slug\":\"变态跳台阶问题\",\"link\":\"#变态跳台阶问题\",\"children\":[]},{\"level\":2,\"title\":\"二维数组查找\",\"slug\":\"二维数组查找\",\"link\":\"#二维数组查找\",\"children\":[]},{\"level\":2,\"title\":\"替换空格\",\"slug\":\"替换空格\",\"link\":\"#替换空格\",\"children\":[]},{\"level\":2,\"title\":\"数值的整数次方\",\"slug\":\"数值的整数次方\",\"link\":\"#数值的整数次方\",\"children\":[]},{\"level\":2,\"title\":\"调整数组顺序使奇数位于偶数前面\",\"slug\":\"调整数组顺序使奇数位于偶数前面\",\"link\":\"#调整数组顺序使奇数位于偶数前面\",\"children\":[]},{\"level\":2,\"title\":\"链表中倒数第 k 个节点\",\"slug\":\"链表中倒数第-k-个节点\",\"link\":\"#链表中倒数第-k-个节点\",\"children\":[]},{\"level\":2,\"title\":\"反转链表\",\"slug\":\"反转链表\",\"link\":\"#反转链表\",\"children\":[]},{\"level\":2,\"title\":\"合并两个排序的链表\",\"slug\":\"合并两个排序的链表\",\"link\":\"#合并两个排序的链表\",\"children\":[]},{\"level\":2,\"title\":\"用两个栈实现队列\",\"slug\":\"用两个栈实现队列\",\"link\":\"#用两个栈实现队列\",\"children\":[]},{\"level\":2,\"title\":\"栈的压入,弹出序列\",\"slug\":\"栈的压入-弹出序列\",\"link\":\"#栈的压入-弹出序列\",\"children\":[]}],\"git\":{\"createdTime\":null,\"updatedTime\":null,\"contributors\":[]},\"readingTime\":{\"minutes\":16.36,\"words\":4908},\"filePathRelative\":\"cs-basics/data-structure/the-sword-refers-to-offer.md\",\"excerpt\":\"<h2>斐波那契数列</h2>\\n<p><strong>题目描述：</strong></p>\\n<p>大家都知道斐波那契数列，现在要求输入一个整数 n，请你输出斐波那契数列的第 n 项。<br>\\nn&lt;=39</p>\\n<p><strong>问题分析：</strong></p>\\n<p>可以肯定的是这一题通过递归的方式是肯定能做出来，但是这样会有一个很大的问题，那就是递归大量的重复计算会导致内存溢出。另外可以使用迭代法，用 fn1 和 fn2 保存计算过程中的结果，并复用起来。下面我会把两个方法示例代码都给出来并给出两个方法的运行时间对比。</p>\\n<p><strong>示例代码：</strong></p>\",\"autoDesc\":true}")
export { comp, data }
