import comp from "/Users/ruby/idea_demo/xujiansheng-blog/docs/.vuepress/.temp/pages/cs-basics/data-structure/string-algorithm-problems.html.vue"
const data = JSON.parse("{\"path\":\"/cs-basics/data-structure/string-algorithm-problems.html\",\"title\":\"几道常见的字符串算法题\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"几道常见的字符串算法题\",\"category\":\"计算机基础\",\"tag\":[\"算法\"],\"description\":\"作者：wwwxmu 原文地址:https://www.weiweiblog.cn/13string/ 1. KMP 算法 谈到字符串问题，不得不提的就是 KMP 算法，它是用来解决字符串查找的问题，可以在一个字符串（S）中查找一个子串（W）出现的位置。KMP 算法把字符匹配的时间复杂度缩小到 O(m+n) ,而空间复杂度也只有 O(m)。因为“暴力搜索...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://snailcoding.cn/cs-basics/data-structure/string-algorithm-problems.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"蜗牛のJava宝典\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"几道常见的字符串算法题\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"作者：wwwxmu 原文地址:https://www.weiweiblog.cn/13string/ 1. KMP 算法 谈到字符串问题，不得不提的就是 KMP 算法，它是用来解决字符串查找的问题，可以在一个字符串（S）中查找一个子串（W）出现的位置。KMP 算法把字符匹配的时间复杂度缩小到 O(m+n) ,而空间复杂度也只有 O(m)。因为“暴力搜索...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Mr.Xu\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"算法\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"几道常见的字符串算法题\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Mr.Xu\\\",\\\"url\\\":\\\"https://snailcoding.cn\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"1. KMP 算法\",\"slug\":\"_1-kmp-算法\",\"link\":\"#_1-kmp-算法\",\"children\":[]},{\"level\":2,\"title\":\"2. 替换空格\",\"slug\":\"_2-替换空格\",\"link\":\"#_2-替换空格\",\"children\":[]},{\"level\":2,\"title\":\"3. 最长公共前缀\",\"slug\":\"_3-最长公共前缀\",\"link\":\"#_3-最长公共前缀\",\"children\":[]},{\"level\":2,\"title\":\"4. 回文串\",\"slug\":\"_4-回文串\",\"link\":\"#_4-回文串\",\"children\":[{\"level\":3,\"title\":\"4.1. 最长回文串\",\"slug\":\"_4-1-最长回文串\",\"link\":\"#_4-1-最长回文串\",\"children\":[]},{\"level\":3,\"title\":\"4.2. 验证回文串\",\"slug\":\"_4-2-验证回文串\",\"link\":\"#_4-2-验证回文串\",\"children\":[]},{\"level\":3,\"title\":\"4.3. 最长回文子串\",\"slug\":\"_4-3-最长回文子串\",\"link\":\"#_4-3-最长回文子串\",\"children\":[]},{\"level\":3,\"title\":\"4.4. 最长回文子序列\",\"slug\":\"_4-4-最长回文子序列\",\"link\":\"#_4-4-最长回文子序列\",\"children\":[]}]},{\"level\":2,\"title\":\"5. 括号匹配深度\",\"slug\":\"_5-括号匹配深度\",\"link\":\"#_5-括号匹配深度\",\"children\":[]},{\"level\":2,\"title\":\"6. 把字符串转换成整数\",\"slug\":\"_6-把字符串转换成整数\",\"link\":\"#_6-把字符串转换成整数\",\"children\":[]}],\"git\":{\"createdTime\":null,\"updatedTime\":null,\"contributors\":[]},\"readingTime\":{\"minutes\":9.33,\"words\":2798},\"filePathRelative\":\"cs-basics/data-structure/string-algorithm-problems.md\",\"excerpt\":\"<blockquote>\\n<p>作者：wwwxmu</p>\\n<p>原文地址:<a href=\\\"https://www.weiweiblog.cn/13string/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">https://www.weiweiblog.cn/13string/</a></p>\\n</blockquote>\\n<h2>1. KMP 算法</h2>\\n<p>谈到字符串问题，不得不提的就是 KMP 算法，它是用来解决字符串查找的问题，可以在一个字符串（S）中查找一个子串（W）出现的位置。KMP 算法把字符匹配的时间复杂度缩小到 O(m+n) ,而空间复杂度也只有 O(m)。因为“暴力搜索”的方法会反复回溯主串，导致效率低下，而 KMP 算法可以利用已经部分匹配这个有效信息，保持主串上的指针不回溯，通过修改子串的指针，让模式串尽量地移动到有效的位置。</p>\",\"autoDesc\":true}")
export { comp, data }
