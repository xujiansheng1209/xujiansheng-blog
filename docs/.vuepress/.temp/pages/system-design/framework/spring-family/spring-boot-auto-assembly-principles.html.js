import comp from "/Users/ruby/idea_demo/xujiansheng-blog/docs/.vuepress/.temp/pages/system-design/framework/spring-family/spring-boot-auto-assembly-principles.html.vue"
const data = JSON.parse("{\"path\":\"/system-design/framework/spring-family/spring-boot-auto-assembly-principles.html\",\"title\":\"SpringBoot 自动装配原理详解\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"SpringBoot 自动装配原理详解\",\"category\":\"框架\",\"tag\":[\"SpringBoot\"],\"description\":\"作者：Miki-byte-1024 & Snailclimb 每次问到 Spring Boot， 面试官非常喜欢问这个问题：“讲述一下 SpringBoot 自动装配原理？”。 我觉得我们可以从以下几个方面回答： 什么是 SpringBoot 自动装配？ SpringBoot 是如何实现自动装配的？如何实现按需加载？ 如何实现一个 Starter？ 篇...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://snailcoding.cn/system-design/framework/spring-family/spring-boot-auto-assembly-principles.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"蜗牛のJava宝典\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"SpringBoot 自动装配原理详解\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"作者：Miki-byte-1024 & Snailclimb 每次问到 Spring Boot， 面试官非常喜欢问这个问题：“讲述一下 SpringBoot 自动装配原理？”。 我觉得我们可以从以下几个方面回答： 什么是 SpringBoot 自动装配？ SpringBoot 是如何实现自动装配的？如何实现按需加载？ 如何实现一个 Starter？ 篇...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:image\",\"content\":\"https://oss.javaguide.cn/p3-juejin/bcc73490afbe4c6ba62acde6a94ffdfd~tplv-k3u1fbpfcp-watermark.png\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"name\":\"twitter:card\",\"content\":\"summary_large_image\"}],[\"meta\",{\"name\":\"twitter:image:alt\",\"content\":\"SpringBoot 自动装配原理详解\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Mr.Xu\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"SpringBoot\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"SpringBoot 自动装配原理详解\\\",\\\"image\\\":[\\\"https://oss.javaguide.cn/p3-juejin/bcc73490afbe4c6ba62acde6a94ffdfd~tplv-k3u1fbpfcp-watermark.png\\\",\\\"https://oss.javaguide.cn/github/javaguide/system-design/framework/spring/3c1200712655443ca4b38500d615bb70~tplv-k3u1fbpfcp-watermark.png\\\",\\\"https://oss.javaguide.cn/p3-juejin/77aa6a3727ea4392870f5cccd09844ab~tplv-k3u1fbpfcp-watermark.png\\\",\\\"https://oss.javaguide.cn/p3-juejin/3d6ec93bbda1453aa08c52b49516c05a~tplv-k3u1fbpfcp-zoom-1.png\\\",\\\"https://oss.javaguide.cn/github/javaguide/system-design/framework/spring/58c51920efea4757aa1ec29c6d5f9e36~tplv-k3u1fbpfcp-watermark.png\\\",\\\"https://oss.javaguide.cn/github/javaguide/system-design/framework/spring/94d6e1a060ac41db97043e1758789026~tplv-k3u1fbpfcp-watermark.png\\\",\\\"https://oss.javaguide.cn/github/javaguide/system-design/framework/spring/68fa66aeee474b0385f94d23bcfe1745~tplv-k3u1fbpfcp-watermark.png\\\",\\\"https://oss.javaguide.cn/github/javaguide/system-design/framework/spring/267f8231ae2e48d982154140af6437b0~tplv-k3u1fbpfcp-watermark.png\\\",\\\"https://oss.javaguide.cn/github/javaguide/system-design/framework/spring/1ff0ebe7844f40289eb60213af72c5a6~tplv-k3u1fbpfcp-watermark.png\\\",\\\"https://oss.javaguide.cn/github/javaguide/system-design/framework/spring/5e14254276604f87b261e5a80a354cc0~tplv-k3u1fbpfcp-watermark.png\\\",\\\"https://oss.javaguide.cn/github/javaguide/system-design/framework/spring/1843f1d12c5649fba85fd7b4e4a59e39~tplv-k3u1fbpfcp-watermark.png\\\",\\\"https://oss.javaguide.cn/github/javaguide/system-design/framework/spring/97b738321f1542ea8140484d6aaf0728~tplv-k3u1fbpfcp-watermark.png\\\",\\\"https://oss.javaguide.cn/github/javaguide/system-design/framework/spring/edcdd8595a024aba85b6bb20d0e3fed4~tplv-k3u1fbpfcp-watermark.png\\\",\\\"https://oss.javaguide.cn/github/javaguide/system-design/framework/spring/9a265eea4de742a6bbdbbaa75f437307~tplv-k3u1fbpfcp-watermark.png\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Mr.Xu\\\",\\\"url\\\":\\\"https://snailcoding.cn\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"前言\",\"slug\":\"前言\",\"link\":\"#前言\",\"children\":[]},{\"level\":2,\"title\":\"什么是 SpringBoot 自动装配？\",\"slug\":\"什么是-springboot-自动装配\",\"link\":\"#什么是-springboot-自动装配\",\"children\":[]},{\"level\":2,\"title\":\"SpringBoot 是如何实现自动装配的？\",\"slug\":\"springboot-是如何实现自动装配的\",\"link\":\"#springboot-是如何实现自动装配的\",\"children\":[{\"level\":3,\"title\":\"@EnableAutoConfiguration:实现自动装配的核心注解\",\"slug\":\"enableautoconfiguration-实现自动装配的核心注解\",\"link\":\"#enableautoconfiguration-实现自动装配的核心注解\",\"children\":[]},{\"level\":3,\"title\":\"AutoConfigurationImportSelector:加载自动装配类\",\"slug\":\"autoconfigurationimportselector-加载自动装配类\",\"link\":\"#autoconfigurationimportselector-加载自动装配类\",\"children\":[]}]},{\"level\":2,\"title\":\"如何实现一个 Starter\",\"slug\":\"如何实现一个-starter\",\"link\":\"#如何实现一个-starter\",\"children\":[]},{\"level\":2,\"title\":\"总结\",\"slug\":\"总结\",\"link\":\"#总结\",\"children\":[]}],\"readingTime\":{\"minutes\":7.35,\"words\":2204},\"filePathRelative\":\"system-design/framework/spring-family/spring-boot-auto-assembly-principles.md\",\"excerpt\":\"<blockquote>\\n<p>作者：<a href=\\\"https://github.com/Miki-byte-1024\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Miki-byte-1024</a> &amp; <a href=\\\"https://github.com/Snailclimb\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Snailclimb</a></p>\\n</blockquote>\\n<p>每次问到 Spring Boot， 面试官非常喜欢问这个问题：“讲述一下 SpringBoot 自动装配原理？”。</p>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
