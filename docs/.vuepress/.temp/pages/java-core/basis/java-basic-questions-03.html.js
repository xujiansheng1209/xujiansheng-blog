import comp from "/Users/ruby/idea_demo/xujiansheng-blog/docs/.vuepress/.temp/pages/java-core/basis/java-basic-questions-03.html.vue"
const data = JSON.parse("{\"path\":\"/java-core/basis/java-basic-questions-03.html\",\"title\":\"Java基础常见面试题总结(下)\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"Java基础常见面试题总结(下)\",\"category\":\"Java\",\"description\":\"1. 深克隆和浅克隆有什么区别？ 深克隆（Deep Clone）是将原型对象中的所有类型，无论是值类型还是引用类型，都复制一份给克隆对象，也就是说深克隆会把原型对象和原型对象所引用的对象，都复制一份给克隆对象。 浅克隆（Shadow Clone）是把原型对象中成员变量为值类型的属性都复制给克隆对象，把原型对象中成员变量为引用类型的引用地址也复制给克隆对...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://snailcoding.cn/java-core/basis/java-basic-questions-03.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"蜗牛のJava宝典\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Java基础常见面试题总结(下)\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"1. 深克隆和浅克隆有什么区别？ 深克隆（Deep Clone）是将原型对象中的所有类型，无论是值类型还是引用类型，都复制一份给克隆对象，也就是说深克隆会把原型对象和原型对象所引用的对象，都复制一份给克隆对象。 浅克隆（Shadow Clone）是把原型对象中成员变量为值类型的属性都复制给克隆对象，把原型对象中成员变量为引用类型的引用地址也复制给克隆对...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Mr.Xu\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Java基础常见面试题总结(下)\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Mr.Xu\\\",\\\"url\\\":\\\"https://snailcoding.cn\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"1. 深克隆和浅克隆有什么区别？\",\"slug\":\"_1-深克隆和浅克隆有什么区别\",\"link\":\"#_1-深克隆和浅克隆有什么区别\",\"children\":[]},{\"level\":2,\"title\":\"2. 如何实现深克隆？\",\"slug\":\"_2-如何实现深克隆\",\"link\":\"#_2-如何实现深克隆\",\"children\":[]},{\"level\":2,\"title\":\"3. 什么是动态代理？\",\"slug\":\"_3-什么是动态代理\",\"link\":\"#_3-什么是动态代理\",\"children\":[]},{\"level\":2,\"title\":\"4. 动态代理和静态代理有什么区别？\",\"slug\":\"_4-动态代理和静态代理有什么区别\",\"link\":\"#_4-动态代理和静态代理有什么区别\",\"children\":[]},{\"level\":2,\"title\":\"5. 如何实现动态代理？\",\"slug\":\"_5-如何实现动态代理\",\"link\":\"#_5-如何实现动态代理\",\"children\":[]},{\"level\":2,\"title\":\"6. JDK Proxy 和 CGLib 有什么区别？\",\"slug\":\"_6-jdk-proxy-和-cglib-有什么区别\",\"link\":\"#_6-jdk-proxy-和-cglib-有什么区别\",\"children\":[]},{\"level\":2,\"title\":\"7. 动态代理的底层是如何实现的？\",\"slug\":\"_7-动态代理的底层是如何实现的\",\"link\":\"#_7-动态代理的底层是如何实现的\",\"children\":[]},{\"level\":2,\"title\":\"8. 说一下反射机制？\",\"slug\":\"_8-说一下反射机制\",\"link\":\"#_8-说一下反射机制\",\"children\":[]},{\"level\":2,\"title\":\"9. 如何使用反射？\",\"slug\":\"_9-如何使用反射\",\"link\":\"#_9-如何使用反射\",\"children\":[]},{\"level\":2,\"title\":\"10. 反射有什么优缺点？\",\"slug\":\"_10-反射有什么优缺点\",\"link\":\"#_10-反射有什么优缺点\",\"children\":[]}],\"git\":{\"createdTime\":null,\"updatedTime\":null,\"contributors\":[]},\"readingTime\":{\"minutes\":9.69,\"words\":2907},\"filePathRelative\":\"java-core/basis/java-basic-questions-03.md\",\"excerpt\":\"<h2>1. 深克隆和浅克隆有什么区别？</h2>\\n<ul>\\n<li>深克隆（Deep Clone）是将原型对象中的所有类型，无论是值类型还是引用类型，都复制一份给克隆对象，也就是说深克隆会把原型对象和原型对象所引用的对象，都复制一份给克隆对象。</li>\\n<li>浅克隆（Shadow Clone）是把原型对象中成员变量为值类型的属性都复制给克隆对象，把原型对象中成员变量为引用类型的引用地址也复制给克隆对象，也就是原型对象中如果有成员变量为引用对象，则此引用对象的地址是共享给原型对象和克隆对象的。简单来说就是浅克隆只会复制原型对象，但不会复制它所引用的对象。</li>\\n<li>所以深克隆和浅克隆的主要区别在于：深克隆会复制原型对象和它所引用所有对象，而浅克隆只会复制原型对象。</li>\\n</ul>\",\"autoDesc\":true}")
export { comp, data }
