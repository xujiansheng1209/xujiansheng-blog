import comp from "/Users/ruby/idea_demo/xujiansheng-blog/docs/.vuepress/.temp/pages/java-core/collection/java-collection-questions-02.html.vue"
const data = JSON.parse("{\"path\":\"/java-core/collection/java-collection-questions-02.html\",\"title\":\"Java集合常见面试题总结(下)\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"Java集合常见面试题总结(下)\",\"category\":\"Java\",\"description\":\"1. HashSet 如何保证数据不可重复？ HashSet 保证数据不可重复的原因和 HashSet 添加数据的流程有关。 添加的流程是：当将一个键值对放入 HashMap 时，首先根据 key 的 hashCode() 返回值决定该 Entry 的存储位置。如果有两个 key 的 hash 值相同，则会判断这两个元素 key 的 equals() ...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://snailcoding.cn/java-core/collection/java-collection-questions-02.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"蜗牛のJava宝典\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Java集合常见面试题总结(下)\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"1. HashSet 如何保证数据不可重复？ HashSet 保证数据不可重复的原因和 HashSet 添加数据的流程有关。 添加的流程是：当将一个键值对放入 HashMap 时，首先根据 key 的 hashCode() 返回值决定该 Entry 的存储位置。如果有两个 key 的 hash 值相同，则会判断这两个元素 key 的 equals() ...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Mr.Xu\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Java集合常见面试题总结(下)\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Mr.Xu\\\",\\\"url\\\":\\\"https://snailcoding.cn\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"1. HashSet 如何保证数据不可重复？\",\"slug\":\"_1-hashset-如何保证数据不可重复\",\"link\":\"#_1-hashset-如何保证数据不可重复\",\"children\":[]},{\"level\":2,\"title\":\"2.HashMap 和 Hashtable 有什么区别？\",\"slug\":\"_2-hashmap-和-hashtable-有什么区别\",\"link\":\"#_2-hashmap-和-hashtable-有什么区别\",\"children\":[]},{\"level\":2,\"title\":\"3. HashMap 底层是如何实现的？\",\"slug\":\"_3-hashmap-底层是如何实现的\",\"link\":\"#_3-hashmap-底层是如何实现的\",\"children\":[]},{\"level\":2,\"title\":\"4. 说一下 HashMap 新增流程？\",\"slug\":\"_4-说一下-hashmap-新增流程\",\"link\":\"#_4-说一下-hashmap-新增流程\",\"children\":[]},{\"level\":2,\"title\":\"5. 为什么链表要升级为红黑树？\",\"slug\":\"_5-为什么链表要升级为红黑树\",\"link\":\"#_5-为什么链表要升级为红黑树\",\"children\":[]},{\"level\":2,\"title\":\"6. 什么情况红黑树会退化为链表？\",\"slug\":\"_6-什么情况红黑树会退化为链表\",\"link\":\"#_6-什么情况红黑树会退化为链表\",\"children\":[]},{\"level\":2,\"title\":\"7. 为什么 HashMap 要使用红黑树？\",\"slug\":\"_7-为什么-hashmap-要使用红黑树\",\"link\":\"#_7-为什么-hashmap-要使用红黑树\",\"children\":[]},{\"level\":2,\"title\":\"8. HashMap 重要的参数有哪些？为什么加载因子是 0.75？\",\"slug\":\"_8-hashmap-重要的参数有哪些-为什么加载因子是-0-75\",\"link\":\"#_8-hashmap-重要的参数有哪些-为什么加载因子是-0-75\",\"children\":[]},{\"level\":2,\"title\":\"9. HashMap 如何解决哈希冲突？\",\"slug\":\"_9-hashmap-如何解决哈希冲突\",\"link\":\"#_9-hashmap-如何解决哈希冲突\",\"children\":[]},{\"level\":2,\"title\":\"10. ConcurrentHashMap 如何保证线程安全？\",\"slug\":\"_10-concurrenthashmap-如何保证线程安全\",\"link\":\"#_10-concurrenthashmap-如何保证线程安全\",\"children\":[]}],\"git\":{\"createdTime\":null,\"updatedTime\":null,\"contributors\":[]},\"readingTime\":{\"minutes\":5.04,\"words\":1512},\"filePathRelative\":\"java-core/collection/java-collection-questions-02.md\",\"excerpt\":\"<h2>1. HashSet 如何保证数据不可重复？</h2>\\n<p>HashSet 保证数据不可重复的原因和 HashSet 添加数据的流程有关。</p>\\n<p>添加的流程是：当将一个键值对放入 HashMap 时，首先根据 key 的 hashCode() 返回值决定该 Entry 的存储位置。如果有两个 key 的 hash 值相同，则会判断这两个元素 key 的 equals() 是否相同，如果相同就返回 true，说明是重复键值对，那么 HashSet 中 add() 方法的返回值会是 false，表示 HashSet 添加元素失败。因此，如果向 HashSet 中添加一个已经存在的元素，新添加的集合元素不会覆盖已有元素，从而保证了元素的不重复。如果不是重复元素，put 方法最终会返回 null，传递到 HashSet 的 add 方法就是添加成功。</p>\",\"autoDesc\":true}")
export { comp, data }
