import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-Cg1ooxyK.js";const p={},e=t(`<h1 id="如何写一个接口" tabindex="-1"><a class="header-anchor" href="#如何写一个接口"><span>如何写一个接口</span></a></h1><p>此接口非彼接口。此接口是MVC的设计模式中的Controller层，一般我们会叫Controller层里的方法为接口。他们是负责</p><p>接收前端或者其它服务的传来的请求，并对请求进行相应的处理，最终再将处理结果返回给前端或者其它服务。</p><h2 id="_1-模糊分页查询" tabindex="-1"><a class="header-anchor" href="#_1-模糊分页查询"><span>1.模糊分页查询</span></a></h2><ul><li><h5 id="controller层" tabindex="-1"><a class="header-anchor" href="#controller层"><span>Controller层</span></a></h5></li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;camera&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CameraAlarmController</span> <span class="token punctuation">{</span>

  <span class="token annotation punctuation">@Autowired</span>
  <span class="token keyword">private</span> <span class="token class-name">IWarehouseOutService</span> warehouseOutService<span class="token punctuation">;</span> <span class="token comment">//注入接口</span>

  <span class="token doc-comment comment">/**
     * 获取设备相关信息
     * <span class="token keyword">@param</span> <span class="token parameter">equipAttribute</span>
     * <span class="token keyword">@param</span> <span class="token parameter">equipType</span>
     * <span class="token keyword">@param</span> <span class="token parameter">keywords</span>
     * <span class="token keyword">@param</span> <span class="token parameter">pageNum</span>
     * <span class="token keyword">@param</span> <span class="token parameter">pageSize</span>
     * <span class="token keyword">@return</span>
     */</span>
  <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;getOutboundEquipmentInfo&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">public</span> <span class="token class-name">Result</span> <span class="token function">getOutboundEquipmentInfo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span><span class="token string">&quot;operationType&quot;</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span><span class="token string">&quot;pageNum&quot;</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> pageNum<span class="token punctuation">,</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span><span class="token string">&quot;pageSize&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">&quot;10&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> pageSize<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">PageHelper</span><span class="token punctuation">.</span><span class="token function">startPage</span><span class="token punctuation">(</span>pageNum<span class="token punctuation">,</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OutboundEquipmentInfoVo</span><span class="token punctuation">&gt;</span></span> pageInfo<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>warehouseOutService<span class="token punctuation">.</span><span class="token function">getOutboundEquipmentInfo</span><span class="token punctuation">(</span>equipAttribute，equipTypeId<span class="token punctuation">,</span>warehouseId<span class="token punctuation">,</span>operationType<span class="token punctuation">,</span>keywords<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SuccessResult</span><span class="token punctuation">(</span>pageInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在进行模糊查询操作的时候，往往有时候需要查询的参数很多，这时候也可以考虑使用实体类接收前端传参，更改如下：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/getOutboundEquipmentInfo&quot;</span><span class="token punctuation">)</span><span class="token comment">//这里改成post请求</span>
    <span class="token keyword">public</span> <span class="token class-name">Result</span> <span class="token function">getOutboundEquipmentInfo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span>  <span class="token class-name">EquipInfoVo</span> vo<span class="token punctuation">)</span><span class="token punctuation">{</span>
       <span class="token class-name">PageHelper</span><span class="token punctuation">.</span><span class="token function">startPage</span><span class="token punctuation">(</span>vo<span class="token punctuation">.</span><span class="token function">getPageNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>vo<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OutboundEquipmentInfoVo</span><span class="token punctuation">&gt;</span></span> pageInfo<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>warehouseOutService<span class="token punctuation">.</span><span class="token function">getOutboundEquipmentInfo</span><span class="token punctuation">(</span>vo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SuccessResult</span><span class="token punctuation">(</span>pageInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接收前端传参实体类代码如下：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Accessors</span><span class="token punctuation">(</span>chain <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EquipInfoVo</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@JsonProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;operationType&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> operationType<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@JsonProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;warehouseId&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> warehouseId<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@JsonProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;equipAttribute&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> equipAttribute<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@JsonProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;equipTypeId&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> equipTypeId<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@JsonProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;keywords&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> keywords<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@JsonProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;pageNum&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> pageNum<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@JsonProperty</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;pageSize&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> pageSize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><h5 id="service层" tabindex="-1"><a class="header-anchor" href="#service层"><span>service层</span></a></h5><p>定义service层接口（此接口就是我们Java中用intrerface关键字定义的接口了）</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">//这里不用加service注解</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IWarehouseOutService</span> <span class="token punctuation">{</span>
  
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OutboundEquipmentInfoVo</span><span class="token punctuation">&gt;</span></span> <span class="token function">getOutboundEquipmentInfo</span><span class="token punctuation">(</span><span class="token class-name">String</span> equipAttribute<span class="token punctuation">,</span>
                                                           <span class="token class-name">Integer</span> equipTypeId<span class="token punctuation">,</span>
                                                           <span class="token class-name">Integer</span> warehouseId<span class="token punctuation">,</span>
                                                           <span class="token class-name">Integer</span> operationType<span class="token punctuation">,</span>
                                                           <span class="token class-name">String</span> keywords<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>定义service接口实现</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WarehouseOutServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">IWarehouseOutService</span> <span class="token punctuation">{</span>
    
     <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">WmEquipInfoMapper</span> wmEquipInfoMapper<span class="token punctuation">;</span>

 
 <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OutboundEquipmentInfoVo</span><span class="token punctuation">&gt;</span></span> <span class="token function">getOutboundEquipmentInfo</span><span class="token punctuation">(</span><span class="token class-name">String</span> equipAttribute<span class="token punctuation">,</span>
                                                                  <span class="token class-name">Integer</span> equipTypeId<span class="token punctuation">,</span>
                                                                  <span class="token class-name">Integer</span> warehouseId<span class="token punctuation">,</span>
                                                                  <span class="token class-name">Integer</span> operationType<span class="token punctuation">,</span>
                                                                  <span class="token class-name">String</span> keywords<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//入库操作</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>operationType<span class="token operator">==</span><span class="token class-name">WmConstant</span><span class="token punctuation">.</span><span class="token constant">EQUIPMENT_INFO_INCOME</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OutboundEquipmentInfoVo</span><span class="token punctuation">&gt;</span></span> outList<span class="token operator">=</span>wmEquipInfoMapper<span class="token punctuation">.</span><span class="token function">getEquipmentInformation</span><span class="token punctuation">(</span>equipAttribute<span class="token punctuation">,</span>equipTypeId<span class="token punctuation">,</span>keywords<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">WmRepertoryInfoDto</span><span class="token punctuation">&gt;</span></span> allEquip <span class="token operator">=</span> wmRepertoryInfoMapper<span class="token punctuation">.</span><span class="token function">getAllEquip</span><span class="token punctuation">(</span>warehouseId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            outList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>info<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
                <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">WmRepertoryInfoDto</span><span class="token punctuation">&gt;</span></span> wmRepertoryInfoDto <span class="token operator">=</span> allEquip<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>all <span class="token operator">-&gt;</span> all<span class="token punctuation">.</span><span class="token function">getEquipId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>wmRepertoryInfoDto<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    info<span class="token punctuation">.</span><span class="token function">setInventoryQuantity</span><span class="token punctuation">(</span>wmRepertoryInfoDto<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    info<span class="token punctuation">.</span><span class="token function">setDamagesNum</span><span class="token punctuation">(</span>wmRepertoryInfoDto<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDamagesNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
                    info<span class="token punctuation">.</span><span class="token function">setInventoryQuantity</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    info<span class="token punctuation">.</span><span class="token function">setDamagesNum</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> outList<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token comment">//出库操作</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OutboundEquipmentInfoVo</span><span class="token punctuation">&gt;</span></span> outboundEquipmentInfo <span class="token operator">=</span> wmEquipInfoMapper<span class="token punctuation">.</span><span class="token function">getOutboundEquipmentInfo</span><span class="token punctuation">(</span>equipAttribute<span class="token punctuation">,</span> warehouseId<span class="token punctuation">,</span> equipTypeId<span class="token punctuation">,</span> keywords<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">WmRelationEquipDto</span><span class="token punctuation">&gt;</span></span> relationEquipDtos<span class="token operator">=</span>wmOutWarehouseMapper<span class="token punctuation">.</span><span class="token function">getOutboundApproval</span><span class="token punctuation">(</span>warehouseId<span class="token punctuation">)</span><span class="token punctuation">;</span>
            outboundEquipmentInfo<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>out<span class="token operator">-&gt;</span> relationEquipDtos<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>re<span class="token operator">-&gt;</span><span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token function">getEquipId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>out<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                        <span class="token class-name">Integer</span> num<span class="token operator">=</span>out<span class="token punctuation">.</span><span class="token function">getInventoryQuantity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>re<span class="token punctuation">.</span><span class="token function">getNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        out<span class="token punctuation">.</span><span class="token function">setInventoryQuantity</span><span class="token punctuation">(</span>num<span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token number">0</span><span class="token operator">:</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> outboundEquipmentInfo<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><h5 id="mapper层" tabindex="-1"><a class="header-anchor" href="#mapper层"><span>mapper层</span></a></h5></li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">//这上面不加@Mapper注解就要，在启动类上加这个注解@MapperScan(&quot;com.zcloud.dao.mapper&quot;)</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">WmEquipInfoMapper</span> <span class="token punctuation">{</span>

  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OutboundEquipmentInfoVo</span><span class="token punctuation">&gt;</span></span> <span class="token function">getOutboundEquipmentInfo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;equipAttribute&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> equipAttribute<span class="token punctuation">,</span>
                                                           <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;warehouseId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> warehouseId<span class="token punctuation">,</span>
                                                           <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;equipTypeId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> equipTypeId<span class="token punctuation">,</span>
                                                           <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;keywords&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> keywords<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">&quot;getOutboundEquipmentInfo&quot;</span> resultType<span class="token operator">=</span><span class="token string">&quot;com.zcloud.domain.warehousemanage.vo.OutboundEquipmentInfoVo&quot;</span><span class="token operator">&gt;</span>
    <span class="token constant">SELECT</span>
        t2<span class="token punctuation">.</span>num inventoryQuantity<span class="token punctuation">,</span>
        t2<span class="token punctuation">.</span>damages_num<span class="token punctuation">,</span>
        <span class="token punctuation">(</span> <span class="token constant">SELECT</span> \`name\` <span class="token constant">FROM</span> t_dic_item <span class="token class-name">WHERE</span> type_code <span class="token operator">=</span> <span class="token string">&quot;equip_attribute&quot;</span> <span class="token class-name">AND</span> <span class="token constant">CODE</span> <span class="token operator">=</span> t1<span class="token punctuation">.</span>equip_attribute <span class="token punctuation">)</span> \`equipAttributeName\`<span class="token punctuation">,</span>
        <span class="token punctuation">(</span> <span class="token constant">SELECT</span> \`name\` <span class="token constant">FROM</span> t_dic_item <span class="token class-name">WHERE</span> type_code <span class="token operator">=</span> <span class="token string">&quot;equip_unit&quot;</span> <span class="token class-name">AND</span> <span class="token constant">CODE</span> <span class="token operator">=</span> t1<span class="token punctuation">.</span>equip_unit <span class="token punctuation">)</span> equipUnitName<span class="token punctuation">,</span>
        t1<span class="token punctuation">.</span>equip_name<span class="token punctuation">,</span>
        t1<span class="token punctuation">.</span>equip_brand<span class="token punctuation">,</span>
        t1<span class="token punctuation">.</span>id<span class="token punctuation">,</span>
        t1<span class="token punctuation">.</span>equip_model<span class="token punctuation">,</span>
        t3<span class="token punctuation">.</span>\`name\` equipTypeName
    <span class="token constant">FROM</span>
        t_common_wm_equip_info t1
        <span class="token constant">LEFT</span> <span class="token constant">JOIN</span> t_common_wm_repertory_info t2 <span class="token constant">ON</span> t1<span class="token punctuation">.</span>id <span class="token operator">=</span> t2<span class="token punctuation">.</span>equip_id
        <span class="token constant">LEFT</span> <span class="token constant">JOIN</span> t_common_wm_equip_type t3 <span class="token constant">ON</span> t1<span class="token punctuation">.</span>equip_type_id <span class="token operator">=</span> t3<span class="token punctuation">.</span>id
    <span class="token constant">WHERE</span>
        t1<span class="token punctuation">.</span>removed <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token constant">AND</span> t2<span class="token punctuation">.</span>removed <span class="token operator">=</span><span class="token number">0</span>
        <span class="token constant">AND</span> t3<span class="token punctuation">.</span>removed<span class="token operator">=</span><span class="token number">0</span>
        <span class="token constant">AND</span> t2<span class="token punctuation">.</span>warehouse_id<span class="token operator">=</span>#<span class="token punctuation">{</span>warehouseId<span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;equipAttribute!=null and equipAttribute!=&#39;&#39;&quot;</span><span class="token operator">&gt;</span>
        <span class="token constant">AND</span> t1<span class="token punctuation">.</span>equip_attribute<span class="token operator">=</span>#<span class="token punctuation">{</span>equipAttribute<span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
    <span class="token comment">//注意Interge类型的条件判断是否为空的时候一定不要加非空字符串判断，因为当你传的值为0的时候，mybatis会把它判断为空字符串</span>
    <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;equipTypeId!=null&quot;</span><span class="token operator">&gt;</span>  
        <span class="token constant">AND</span> t1<span class="token punctuation">.</span>equip_type_id<span class="token operator">=</span>#<span class="token punctuation">{</span>equipTypeId<span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;keywords!=null and keywords!=&#39;&#39;&quot;</span><span class="token operator">&gt;</span>
            <span class="token constant">AND</span> <span class="token punctuation">(</span>t1<span class="token punctuation">.</span>equip_name like <span class="token function">concat</span><span class="token punctuation">(</span><span class="token char">&#39;%&#39;</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>keywords<span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token constant">OR</span> t1<span class="token punctuation">.</span>equip_model like <span class="token function">concat</span><span class="token punctuation">(</span><span class="token char">&#39;%&#39;</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>keywords<span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token constant">OR</span> t1<span class="token punctuation">.</span>equip_brand like <span class="token function">concat</span><span class="token punctuation">(</span><span class="token char">&#39;%&#39;</span><span class="token punctuation">,</span>#<span class="token punctuation">{</span>keywords<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>​</p><h2 id="_2-批量删除" tabindex="-1"><a class="header-anchor" href="#_2-批量删除"><span>2.批量删除</span></a></h2><ul><li><p>controller层</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@DeleteMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/delete&quot;</span><span class="token punctuation">,</span> name <span class="token operator">=</span> <span class="token string">&quot;仓库管理，删除仓库信息&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Result</span> <span class="token function">deleteWareHouseInfo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;ids&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> ids<span class="token punctuation">,</span><span class="token class-name">HttpServletRequest</span> request
                                 <span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token class-name">Integer</span> userId <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> <span class="token class-name">RequestUtils</span><span class="token punctuation">.</span><span class="token function">getCurrentUser</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SuccessResult</span><span class="token punctuation">(</span>wareHouseInfoService<span class="token punctuation">.</span><span class="token function">deleteWareHouseInfo</span><span class="token punctuation">(</span>ids<span class="token punctuation">,</span>userId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1,2,3</p></li><li><p>service层</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Transactional</span> <span class="token comment">//单表删除不加这个注解可以，多表关联删除一定要加</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">deleteWareHouseInfo</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> ids<span class="token punctuation">,</span> <span class="token class-name">Integer</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> idList <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>ids<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> warehouseInfoMapper<span class="token punctuation">.</span><span class="token function">deleteByIds</span><span class="token punctuation">(</span>idList<span class="token punctuation">,</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>mapper层</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code> <span class="token class-name">Integer</span> <span class="token function">deleteByIds</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;idList&quot;</span><span class="token punctuation">)</span>  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> idList<span class="token punctuation">,</span>
                       <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token operator">&lt;</span>update id<span class="token operator">=</span><span class="token string">&quot;deleteByIds&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;java.lang.Integer&quot;</span><span class="token operator">&gt;</span>
       <span class="token operator">&lt;</span>foreach collection<span class="token operator">=</span><span class="token string">&quot;idList&quot;</span> item<span class="token operator">=</span><span class="token string">&quot;item&quot;</span> separator<span class="token operator">=</span><span class="token string">&quot;;&quot;</span><span class="token operator">&gt;</span>
        update t_warehouse_info
        set removed <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
        rm_uid <span class="token operator">=</span> #<span class="token punctuation">{</span>userId<span class="token punctuation">}</span><span class="token punctuation">,</span>
        rm_time <span class="token operator">=</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        up_time <span class="token operator">=</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        where id <span class="token operator">=</span>#<span class="token punctuation">{</span>item<span class="token punctuation">.</span>id<span class="token punctuation">}</span>
       <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>update<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="_3-新增" tabindex="-1"><a class="header-anchor" href="#_3-新增"><span>3.新增</span></a></h2><ul><li><p>controller层</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>  <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/add&quot;</span><span class="token punctuation">,</span> name <span class="token operator">=</span> <span class="token string">&quot;仓库管理，新增采购&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Result</span> <span class="token function">addPurchaseInfo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">WmPurchaseInfoAddVo</span> dto<span class="token punctuation">,</span> <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Integer</span> userId <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> <span class="token class-name">RequestUtils</span><span class="token punctuation">.</span><span class="token function">getCurrentUser</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SuccessResult</span><span class="token punctuation">(</span>wmPurchaseInfoService<span class="token punctuation">.</span><span class="token function">addPurchaseInfo</span><span class="token punctuation">(</span>dto<span class="token punctuation">,</span>userId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>service层</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">addPurchaseInfo</span><span class="token punctuation">(</span><span class="token class-name">WmPurchaseInfoAddVo</span> dto<span class="token punctuation">,</span> <span class="token class-name">Integer</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        <span class="token class-name">Integer</span> result<span class="token punctuation">;</span>
        <span class="token class-name">String</span> orderCode <span class="token operator">=</span> wmUtils<span class="token punctuation">.</span><span class="token function">generateWmCode</span><span class="token punctuation">(</span><span class="token class-name">WmConstant</span><span class="token punctuation">.</span><span class="token constant">PURCHASE_CODE_PREFIX</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        dto<span class="token punctuation">.</span><span class="token function">setOrderCode</span><span class="token punctuation">(</span>orderCode<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCrUid</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setUpUid</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//插入采购基本信息，返回id</span>
        <span class="token comment">//需要注意的是，如果待插入数据的表未设置主键自增，则在这里需要设置主键的值</span>
        <span class="token comment">//而这里是设置了主键自增，所以就需要在mapper层配置sql语句的时候，设置返回自增的主键值</span>
        purchaseInfoMapper<span class="token punctuation">.</span><span class="token function">insertSelective</span><span class="token punctuation">(</span>dto<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">WmRelationEquipDto</span><span class="token punctuation">&gt;</span></span> wmRelationEquipDtos <span class="token operator">=</span> dto<span class="token punctuation">.</span><span class="token function">getRelationEquip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//设置关联设备的，关联id，以及关联类型</span>
        wmRelationEquipDtos<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">setRelationId</span><span class="token punctuation">(</span>dto<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token class-name">WmConstant</span><span class="token punctuation">.</span><span class="token constant">PURCHASE_RELATION</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">setStockPendingNum</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//插入关联设备信息</span>
        result <span class="token operator">=</span> relationEquipMapper<span class="token punctuation">.</span><span class="token function">insertBatch</span><span class="token punctuation">(</span>wmRelationEquipDtos<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result <span class="token operator">&gt;=</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>mapper层</p><p>purchaseInfoMapper.insertSelective(dto);</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>  <span class="token operator">&lt;</span>insert id<span class="token operator">=</span><span class="token string">&quot;insertSelective&quot;</span> useGeneratedKeys<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> keyProperty<span class="token operator">=</span><span class="token string">&quot;id&quot;</span> keyColumn<span class="token operator">=</span><span class="token string">&quot;id&quot;</span>
          parameterType<span class="token operator">=</span><span class="token string">&quot;vip.dtcloud.domain.warehousemanage.vo.WmPurchaseInfoAddVo&quot;</span><span class="token operator">&gt;</span>
    insert into t_common_wm_purchase_info
    <span class="token operator">&lt;</span>trim prefix<span class="token operator">=</span><span class="token string">&quot;(&quot;</span> suffix<span class="token operator">=</span><span class="token string">&quot;)&quot;</span> suffixOverrides<span class="token operator">=</span><span class="token string">&quot;,&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.orderCode != null&quot;</span><span class="token operator">&gt;</span>
        order_code<span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.orderName != null&quot;</span><span class="token operator">&gt;</span>
        order_name<span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.purchaseMethod != null&quot;</span><span class="token operator">&gt;</span>
        purchase_method<span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.purchaseManager != null&quot;</span><span class="token operator">&gt;</span>
        purchase_manager<span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.orderDate != null&quot;</span><span class="token operator">&gt;</span>
        order_date<span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.contractId != null&quot;</span><span class="token operator">&gt;</span>
        contract_id<span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.biddingDocumentIds != null&quot;</span><span class="token operator">&gt;</span>
        bidding_document_ids<span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.purchaseContractIds != null&quot;</span><span class="token operator">&gt;</span>
        purchase_contract_ids<span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.meetingSummaryIds != null&quot;</span><span class="token operator">&gt;</span>
        meeting_summary_ids<span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.otherFilesIds != null&quot;</span><span class="token operator">&gt;</span>
        other_files_ids<span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.remark != null&quot;</span><span class="token operator">&gt;</span>
        remark<span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      up_time<span class="token punctuation">,</span>
      cr_time<span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.upUid != null&quot;</span><span class="token operator">&gt;</span>
        up_uid<span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.crUid != null&quot;</span><span class="token operator">&gt;</span>
        cr_uid<span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>trim<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>trim prefix<span class="token operator">=</span><span class="token string">&quot;values (&quot;</span> suffix<span class="token operator">=</span><span class="token string">&quot;)&quot;</span> suffixOverrides<span class="token operator">=</span><span class="token string">&quot;,&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.orderCode != null&quot;</span><span class="token operator">&gt;</span>
        #<span class="token punctuation">{</span>addVo<span class="token punctuation">.</span>orderCode<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">VARCHAR</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.orderName != null&quot;</span><span class="token operator">&gt;</span>
        #<span class="token punctuation">{</span>addVo<span class="token punctuation">.</span>orderName<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">VARCHAR</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.purchaseMethod != null&quot;</span><span class="token operator">&gt;</span>
        #<span class="token punctuation">{</span>addVo<span class="token punctuation">.</span>purchaseMethod<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">VARCHAR</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.purchaseManager != null&quot;</span><span class="token operator">&gt;</span>
        #<span class="token punctuation">{</span>addVo<span class="token punctuation">.</span>purchaseManager<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">VARCHAR</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.orderDate != null&quot;</span><span class="token operator">&gt;</span>
        #<span class="token punctuation">{</span>addVo<span class="token punctuation">.</span>orderDate<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">TIMESTAMP</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.contractId != null&quot;</span><span class="token operator">&gt;</span>
        #<span class="token punctuation">{</span>addVo<span class="token punctuation">.</span>contractId<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">INTEGER</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.biddingDocumentIds != null&quot;</span><span class="token operator">&gt;</span>
        #<span class="token punctuation">{</span>addVo<span class="token punctuation">.</span>biddingDocumentIds<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">VARCHAR</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.purchaseContractIds != null&quot;</span><span class="token operator">&gt;</span>
        #<span class="token punctuation">{</span>addVo<span class="token punctuation">.</span>purchaseContractIds<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">VARCHAR</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.meetingSummaryIds != null&quot;</span><span class="token operator">&gt;</span>
        #<span class="token punctuation">{</span>addVo<span class="token punctuation">.</span>meetingSummaryIds<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">VARCHAR</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.otherFilesIds != null&quot;</span><span class="token operator">&gt;</span>
        #<span class="token punctuation">{</span>addVo<span class="token punctuation">.</span>otherFilesIds<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">VARCHAR</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.remark != null&quot;</span><span class="token operator">&gt;</span>
        #<span class="token punctuation">{</span>addVo<span class="token punctuation">.</span>remark<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">VARCHAR</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.upUid != null&quot;</span><span class="token operator">&gt;</span>
        #<span class="token punctuation">{</span>addVo<span class="token punctuation">.</span>upUid<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">INTEGER</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;addVo.crUid != null&quot;</span><span class="token operator">&gt;</span>
        #<span class="token punctuation">{</span>addVo<span class="token punctuation">.</span>crUid<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">INTEGER</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>trim<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>insert<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>relationEquipMapper<span class="token punctuation">.</span><span class="token function">insertBatch</span><span class="token punctuation">(</span>wmRelationEquipDtos<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token operator">&lt;</span>insert id<span class="token operator">=</span><span class="token string">&quot;insertBatch&quot;</span><span class="token operator">&gt;</span>
        insert into t_common_wm_relation_equip <span class="token punctuation">(</span>relation_id<span class="token punctuation">,</span> type<span class="token punctuation">,</span>
        equip_id<span class="token punctuation">,</span> equip_serial<span class="token punctuation">,</span> equip_code<span class="token punctuation">,</span>
        num<span class="token punctuation">,</span> stock_pending_num<span class="token punctuation">,</span> up_time
        <span class="token punctuation">)</span>
        values
        <span class="token operator">&lt;</span>foreach collection<span class="token operator">=</span><span class="token string">&quot;dtoList&quot;</span> item<span class="token operator">=</span><span class="token string">&quot;item&quot;</span> separator<span class="token operator">=</span><span class="token string">&quot;,&quot;</span><span class="token operator">&gt;</span>
            <span class="token punctuation">(</span> #<span class="token punctuation">{</span>item<span class="token punctuation">.</span>relationId<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">INTEGER</span><span class="token punctuation">}</span><span class="token punctuation">,</span> #<span class="token punctuation">{</span>item<span class="token punctuation">.</span>type<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">INTEGER</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            #<span class="token punctuation">{</span>item<span class="token punctuation">.</span>equipId<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">BIGINT</span><span class="token punctuation">}</span><span class="token punctuation">,</span> #<span class="token punctuation">{</span>item<span class="token punctuation">.</span>equipSerial<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">VARCHAR</span><span class="token punctuation">}</span><span class="token punctuation">,</span> #<span class="token punctuation">{</span>item<span class="token punctuation">.</span>equipCode<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">VARCHAR</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            #<span class="token punctuation">{</span>item<span class="token punctuation">.</span>num<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">INTEGER</span><span class="token punctuation">}</span><span class="token punctuation">,</span> #<span class="token punctuation">{</span>item<span class="token punctuation">.</span>stockPendingNum<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">INTEGER</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>insert<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意 ： 做批量插入的时候，插入的数量不能太多，否则会因为sql语句过长而出现无法执行的问题。一般超过5000条的话就可以使用分页去插入了。比如可以改成</p><p>如下这样的插入：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>            
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">EquipRealVariableDto</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> lists <span class="token operator">=</span> <span class="token function">splitList</span><span class="token punctuation">(</span>wmRelationEquipDtos<span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            lists<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                 result <span class="token operator">+=</span> relationEquipMapper<span class="token punctuation">.</span><span class="token function">insertBatch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>splitList方法代码如下：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">splitList</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">,</span> <span class="token keyword">int</span> splitCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> length <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> totalLength <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>length <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>splitCount <span class="token operator">-</span> <span class="token number">1L</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> num <span class="token operator">=</span> totalLength <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>splitCount<span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> newList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>i <span class="token operator">&lt;</span> num<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> fromIndex <span class="token operator">=</span> i <span class="token operator">*</span> splitCount<span class="token punctuation">;</span>
            <span class="token keyword">int</span> toIndex <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> splitCount <span class="token operator">&lt;</span> length <span class="token operator">?</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> splitCount <span class="token operator">:</span> length<span class="token punctuation">;</span>
            newList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">subList</span><span class="token punctuation">(</span>fromIndex<span class="token punctuation">,</span> toIndex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> newList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-编辑" tabindex="-1"><a class="header-anchor" href="#_4-编辑"><span>4.编辑</span></a></h2><ul><li>controller层</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@PutMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/edit&quot;</span><span class="token punctuation">,</span> name <span class="token operator">=</span> <span class="token string">&quot;仓库管理，修改仓库信息&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Result</span> <span class="token function">editWareHouseInfo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">WmWarehouseInfoDto</span> dto<span class="token punctuation">,</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Integer</span> userId <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> <span class="token class-name">RequestUtils</span><span class="token punctuation">.</span><span class="token function">getCurrentUser</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SuccessResult</span><span class="token punctuation">(</span>wareHouseInfoService<span class="token punctuation">.</span><span class="token function">editWareHouseInfo</span><span class="token punctuation">(</span>dto<span class="token punctuation">,</span>userId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>Service层</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>  <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">editWareHouseInfo</span><span class="token punctuation">(</span><span class="token class-name">WmWarehouseInfoDto</span> dto<span class="token punctuation">,</span> <span class="token class-name">Integer</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dto<span class="token punctuation">.</span><span class="token function">setUpUid</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> warehouseInfoMapper<span class="token punctuation">.</span><span class="token function">updateByPrimaryKeySelective</span><span class="token punctuation">(</span>dto<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>mapper层</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code> <span class="token operator">&lt;</span>update id<span class="token operator">=</span><span class="token string">&quot;updateByPrimaryKeySelective&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;vip.dtcloud.domain.warehousemanage.dto.WmWarehouseInfoDto&quot;</span><span class="token operator">&gt;</span>
        update t_common_wm_warehouse_info
        <span class="token generics"><span class="token punctuation">&lt;</span>set<span class="token punctuation">&gt;</span></span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;warehouseName != null&quot;</span><span class="token operator">&gt;</span>
                warehouse_name <span class="token operator">=</span> #<span class="token punctuation">{</span>warehouseName<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">VARCHAR</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;warehouseLocation != null&quot;</span><span class="token operator">&gt;</span>
                warehouse_location <span class="token operator">=</span> #<span class="token punctuation">{</span>warehouseLocation<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">VARCHAR</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;warehouseManager != null&quot;</span><span class="token operator">&gt;</span>
                warehouse_manager <span class="token operator">=</span> #<span class="token punctuation">{</span>warehouseManager<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">VARCHAR</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;phone != null&quot;</span><span class="token operator">&gt;</span>
                phone <span class="token operator">=</span> #<span class="token punctuation">{</span>phone<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">VARCHAR</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;departmentId != null&quot;</span><span class="token operator">&gt;</span>
                department_id <span class="token operator">=</span> #<span class="token punctuation">{</span>departmentId<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">VARCHAR</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;warehouseStatus != null&quot;</span><span class="token operator">&gt;</span>
                warehouse_status <span class="token operator">=</span> #<span class="token punctuation">{</span>warehouseStatus<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">INTEGER</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
            up_time <span class="token operator">=</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;upUid != null&quot;</span><span class="token operator">&gt;</span>
                up_uid <span class="token operator">=</span> #<span class="token punctuation">{</span>upUid<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">INTEGER</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>set<span class="token operator">&gt;</span>
        where id <span class="token operator">=</span> #<span class="token punctuation">{</span>id<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">INTEGER</span><span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>update<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>终极大法 ： 看别人是怎么写的，Ctrl c ctrl v ，然后改一改</p>`,27),o=[e];function c(l,u){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","如何写一个接口.html.vue"]]),d=JSON.parse('{"path":"/java-essentials/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E6%8E%A5%E5%8F%A3.html","title":"如何写一个接口","lang":"zh-CN","frontmatter":{"description":"如何写一个接口 此接口非彼接口。此接口是MVC的设计模式中的Controller层，一般我们会叫Controller层里的方法为接口。他们是负责 接收前端或者其它服务的传来的请求，并对请求进行相应的处理，最终再将处理结果返回给前端或者其它服务。 1.模糊分页查询 Controller层 在进行模糊查询操作的时候，往往有时候需要查询的参数很多，这时候也可...","head":[["meta",{"property":"og:url","content":"https://snailcoding.cn/java-essentials/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E6%8E%A5%E5%8F%A3.html"}],["meta",{"property":"og:site_name","content":"蜗牛のJava宝典"}],["meta",{"property":"og:title","content":"如何写一个接口"}],["meta",{"property":"og:description","content":"如何写一个接口 此接口非彼接口。此接口是MVC的设计模式中的Controller层，一般我们会叫Controller层里的方法为接口。他们是负责 接收前端或者其它服务的传来的请求，并对请求进行相应的处理，最终再将处理结果返回给前端或者其它服务。 1.模糊分页查询 Controller层 在进行模糊查询操作的时候，往往有时候需要查询的参数很多，这时候也可..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Mr.Xu"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何写一个接口\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Xu\\",\\"url\\":\\"https://snailcoding.cn\\"}]}"]]},"headers":[{"level":2,"title":"1.模糊分页查询","slug":"_1-模糊分页查询","link":"#_1-模糊分页查询","children":[]},{"level":2,"title":"2.批量删除","slug":"_2-批量删除","link":"#_2-批量删除","children":[]},{"level":2,"title":"3.新增","slug":"_3-新增","link":"#_3-新增","children":[]},{"level":2,"title":"4.编辑","slug":"_4-编辑","link":"#_4-编辑","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":5.44,"words":1632},"filePathRelative":"java-essentials/如何写一个接口.md","excerpt":"\\n<p>此接口非彼接口。此接口是MVC的设计模式中的Controller层，一般我们会叫Controller层里的方法为接口。他们是负责</p>\\n<p>接收前端或者其它服务的传来的请求，并对请求进行相应的处理，最终再将处理结果返回给前端或者其它服务。</p>\\n<h2>1.模糊分页查询</h2>\\n<ul>\\n<li>\\n<h5>Controller层</h5>\\n</li>\\n</ul>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token annotation punctuation\\">@RestController</span>\\n<span class=\\"token annotation punctuation\\">@RequestMapping</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"camera\\"</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">CameraAlarmController</span> <span class=\\"token punctuation\\">{</span>\\n\\n  <span class=\\"token annotation punctuation\\">@Autowired</span>\\n  <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">IWarehouseOutService</span> warehouseOutService<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">//注入接口</span>\\n\\n  <span class=\\"token doc-comment comment\\">/**\\n     * 获取设备相关信息\\n     * <span class=\\"token keyword\\">@param</span> <span class=\\"token parameter\\">equipAttribute</span>\\n     * <span class=\\"token keyword\\">@param</span> <span class=\\"token parameter\\">equipType</span>\\n     * <span class=\\"token keyword\\">@param</span> <span class=\\"token parameter\\">keywords</span>\\n     * <span class=\\"token keyword\\">@param</span> <span class=\\"token parameter\\">pageNum</span>\\n     * <span class=\\"token keyword\\">@param</span> <span class=\\"token parameter\\">pageSize</span>\\n     * <span class=\\"token keyword\\">@return</span>\\n     */</span>\\n  <span class=\\"token annotation punctuation\\">@GetMapping</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"getOutboundEquipmentInfo\\"</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">Result</span> <span class=\\"token function\\">getOutboundEquipmentInfo</span><span class=\\"token punctuation\\">(</span><span class=\\"token annotation punctuation\\">@RequestParam</span><span class=\\"token punctuation\\">(</span>value <span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"operationType\\"</span><span class=\\"token punctuation\\">,</span>required <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">)</span> <span class=\\"token annotation punctuation\\">@RequestParam</span><span class=\\"token punctuation\\">(</span>value <span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"pageNum\\"</span><span class=\\"token punctuation\\">,</span>required <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">,</span> defaultValue <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"1\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token class-name\\">Integer</span> pageNum<span class=\\"token punctuation\\">,</span><span class=\\"token annotation punctuation\\">@RequestParam</span><span class=\\"token punctuation\\">(</span>value <span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"pageSize\\"</span><span class=\\"token punctuation\\">,</span> required <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">,</span> defaultValue <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"10\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token class-name\\">Integer</span> pageSize<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token class-name\\">PageHelper</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">startPage</span><span class=\\"token punctuation\\">(</span>pageNum<span class=\\"token punctuation\\">,</span>pageSize<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">PageInfo</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">OutboundEquipmentInfoVo</span><span class=\\"token punctuation\\">&gt;</span></span> pageInfo<span class=\\"token operator\\">=</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">PageInfo</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token punctuation\\">(</span>warehouseOutService<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getOutboundEquipmentInfo</span><span class=\\"token punctuation\\">(</span>equipAttribute，equipTypeId<span class=\\"token punctuation\\">,</span>warehouseId<span class=\\"token punctuation\\">,</span>operationType<span class=\\"token punctuation\\">,</span>keywords<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">SuccessResult</span><span class=\\"token punctuation\\">(</span>pageInfo<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{k as comp,d as data};
