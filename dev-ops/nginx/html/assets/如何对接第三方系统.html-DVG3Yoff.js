import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-Cg1ooxyK.js";const p={},e=t(`<h2 id="_1-一般对接流程" tabindex="-1"><a class="header-anchor" href="#_1-一般对接流程"><span>1. 一般对接流程</span></a></h2><ul><li>查阅文档，找到满足要求的接口，根据文档，用postman测试，是否能够访问</li><li>访问鉴权接口，获取token</li><li>封装请求参数，请求对接接口</li><li>解析响应体</li><li>根据需求处理对接结果</li></ul><p>telnet ip port</p><p>推送的形式</p><p>主动的访问第三方接口</p><h2 id="_2-代码编写-建议层级" tabindex="-1"><a class="header-anchor" href="#_2-代码编写-建议层级"><span>2. 代码编写，建议层级</span></a></h2><p>定时任务层----&gt;业务层----&gt;访问接口层</p><ul><li><p>定时层代码示例</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CollectHuaWeiBigDataJob</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">IHuaweiYunAccessBigDataService</span> huaweiYunAccessBigDataService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@XxlJob</span><span class="token punctuation">(</span><span class="token string">&quot;collectHuaWeiCloudBigDataTenantJob&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ReturnT</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">collectEcsInstance651DataJob</span><span class="token punctuation">(</span><span class="token class-name">String</span> param<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">XxlJobLogger</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;XXL-JOB, collectHuaWeiCloudBigDataTenantJob beginning&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        huaweiYunAccessBigDataService<span class="token punctuation">.</span><span class="token function">collectBigDataTenantInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">XxlJobLogger</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;XXL-JOB, collectHuaWeiCloudBigDataTenantJob ending&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">ReturnT</span><span class="token punctuation">.</span><span class="token constant">SUCCESS</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>业务层代码示例</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code> <span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HuaweiYunAccessBigDataServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">IHuaweiYunAccessBigDataService</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">HuaWeiBigDataHttpUtils</span> huaWeiBigDataHttpUtils<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token annotation punctuation">@Transactional</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">collectBigDataTenantInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> datas <span class="token operator">=</span> huaWeiBigDataHttpUtils<span class="token punctuation">.</span><span class="token function">getBigDataInfo</span><span class="token punctuation">(</span><span class="token string">&quot;url&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//处理结果</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>datas <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token string">&quot;&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>datas<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// BigDataTenantResp bigDataTenantResp = JSONObject.parseObject(datas, BigDataTenantResp.class);</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BigDataTenantResp</span><span class="token punctuation">&gt;</span></span> bigDataTenantResps <span class="token operator">=</span> <span class="token class-name">JSONObject</span><span class="token punctuation">.</span><span class="token function">parseArray</span><span class="token punctuation">(</span>datas<span class="token punctuation">,</span> <span class="token class-name">BigDataTenantResp</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>bigDataTenantResps<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                bigDataTenantResps<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>bigDataTenantResp <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token comment">//获取集群id</span>
                    <span class="token class-name">Integer</span> clusterId <span class="token operator">=</span> bigDataTenantResp<span class="token punctuation">.</span><span class="token function">getClusterId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//获取租户信息</span>
                    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BigDataTenantResp<span class="token punctuation">.</span>Tenant</span><span class="token punctuation">&gt;</span></span> tenants <span class="token operator">=</span> bigDataTenantResp<span class="token punctuation">.</span><span class="token function">getTenants</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>tenants<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BigDataTenantDto</span><span class="token punctuation">&gt;</span></span> dtos <span class="token operator">=</span> tenants<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                            <span class="token class-name">BigDataTenantDto</span> bigDataTenantDto <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDataTenantDto</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            bigDataTenantDto<span class="token punctuation">.</span><span class="token function">setClusterId</span><span class="token punctuation">(</span>clusterId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setParentId</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getParentId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                                    <span class="token punctuation">.</span><span class="token function">setTenantId</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setTenantName</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setUpdateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token keyword">return</span> bigDataTenantDto<span class="token punctuation">;</span>
                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                           <span class="token comment">//入库操作</span>
                           <span class="token comment">//1、直接删除，再插入</span>
                           <span class="token comment">/* bigDataTenantMapper.deleteAll();
                            //新增
                            bigDataTenantMapper.insertBatch(dtos);*/</span>
                        <span class="token comment">//2、比对数据库数据，区分出需要删除的数据、需要更新的数据、需要新增的数据，分别进行对应操作</span>
                         <span class="token comment">//判断出查询的设备信息，哪些需要更新的，哪些需要删除的，哪些需要新增的，分别进行操作</span>
                                <span class="token comment">/*List&lt;String&gt; equipKeysOld = dceEquipInfoMapper.queryAllEquipKey();
                                List&lt;String&gt; equipKeysNew = dtoList.stream().map(DceEquipInfoDto::getEquipKey).collect(Collectors.toList());
                                //查询出需要删除的数据
                                equipKeysOld.forEach(key -&gt; {
                                    if (!equipKeysNew.contains(key)) {
                                        deleteList.add(key);
                                    }
                                });
                                //查询出需要新增或者更新的数据
                                dtoList.forEach(e -&gt; {
                                    if (!equipKeysOld.contains(e.getEquipKey())) {
                                        addList.add(e.setCreateTime(new Date()).setUpdateTime(new Date()));
                                    } else {
                                        updateList.add(e.setUpdateTime(new Date()));
                                    }
                                });*/</span>
                    <span class="token punctuation">}</span>

                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>访问接口层代码示例</p></li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HuaWeiBigDataHttpUtils</span> <span class="token punctuation">{</span>


    <span class="token keyword">private</span> <span class="token class-name">RestTemplate</span> restTemplate<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@PostConstruct</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NoSuchAlgorithmException</span><span class="token punctuation">,</span> <span class="token class-name">KeyStoreException</span><span class="token punctuation">,</span> <span class="token class-name">KeyManagementException</span> <span class="token punctuation">{</span>

        <span class="token comment">//配置信赖策略</span>
        <span class="token class-name">TrustStrategy</span> acceptingTrustStrategy <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">X509Certificate</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chain<span class="token punctuation">,</span> <span class="token class-name">String</span> authType<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token class-name">SSLContext</span> sslContext <span class="token operator">=</span> <span class="token class-name">SSLContexts</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">loadTrustMaterial</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> acceptingTrustStrategy<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 配置NoopHostnameVerifier.INSTANCE (new NoopHostnameVerifier() 也行)</span>
        <span class="token class-name">SSLConnectionSocketFactory</span> csf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SSLConnectionSocketFactory</span><span class="token punctuation">(</span>sslContext<span class="token punctuation">,</span> <span class="token class-name">NoopHostnameVerifier</span><span class="token punctuation">.</span><span class="token constant">INSTANCE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CloseableHttpClient</span> httpClient <span class="token operator">=</span> <span class="token class-name">HttpClients</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSSLSocketFactory</span><span class="token punctuation">(</span>csf<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HttpComponentsClientHttpRequestFactory</span> requestFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpComponentsClientHttpRequestFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        requestFactory<span class="token punctuation">.</span><span class="token function">setHttpClient</span><span class="token punctuation">(</span>httpClient<span class="token punctuation">)</span><span class="token punctuation">;</span>
        requestFactory<span class="token punctuation">.</span><span class="token function">setConnectTimeout</span><span class="token punctuation">(</span><span class="token number">50000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        requestFactory<span class="token punctuation">.</span><span class="token function">setReadTimeout</span><span class="token punctuation">(</span><span class="token number">50000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        restTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span>requestFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span>  <span class="token function">getBigDataInfo</span><span class="token punctuation">(</span><span class="token class-name">String</span> url<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
             <span class="token comment">//restTemplate默认进行了url编码，使用URI.create(url)可以不使用restTemplate的url编码</span>
            <span class="token comment">//如果url中的参数已经进行了url编码，则要用下面这个代码进行请求</span>
            <span class="token comment">//%3AB67878AB%</span>
            <span class="token comment">//ResponseEntity&lt;String&gt; responseEntity = restTemplate.exchange(URI.create(url), HttpMethod.GET, getBigDataHttpEntity(), String.class);</span>
            <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> responseEntity <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">exchange</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token class-name">HttpMethod</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">,</span> <span class="token function">getBigDataHttpEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>responseEntity<span class="token punctuation">.</span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">OK</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>responseEntity<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;/script&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">String</span> body <span class="token operator">=</span> responseEntity<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> body<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&quot;Huawei cloud 811 big data  fetch  fail,url=====&quot;</span> <span class="token operator">+</span> url <span class="token operator">+</span> <span class="token string">&quot;, response code: &quot;</span><span class="token punctuation">,</span> responseEntity<span class="token punctuation">.</span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;Huawei cloud  811 big data  fetch  error,url=====&quot;</span> <span class="token operator">+</span> url<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token class-name">HttpEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">getBigDataHttpEntity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UnsupportedEncodingException</span> <span class="token punctuation">{</span>
        <span class="token class-name">HttpHeaders</span> httpHeaders <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> encoding <span class="token operator">=</span> <span class="token class-name">DatatypeConverter</span><span class="token punctuation">.</span><span class="token function">printBase64Binary</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        httpHeaders<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Basic &quot;</span> <span class="token operator">+</span> encoding<span class="token punctuation">)</span><span class="token punctuation">;</span>
        httpHeaders<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;Accept&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        httpHeaders<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HttpEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> httpEntity <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>httpHeaders<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> httpEntity<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>xml转换成json</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">XMLUtils</span> <span class="token punctuation">{</span>


    <span class="token doc-comment comment">/**
    * @Description: xml转json
    * @Date: 2023/7/11  10:34
    * @Param xmlStr:
    * <span class="token keyword">@return</span>: com.alibaba.fastjson.JSONObject
    **/</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">JSONObject</span> <span class="token function">xml2Json</span><span class="token punctuation">(</span><span class="token class-name">String</span> xmlStr<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">DocumentException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Document</span> doc <span class="token operator">=</span> <span class="token class-name">DocumentHelper</span><span class="token punctuation">.</span><span class="token function">parseText</span><span class="token punctuation">(</span>xmlStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">JSONObject</span> json <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">dom4j2Json</span><span class="token punctuation">(</span>doc<span class="token punctuation">.</span><span class="token function">getRootElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> json<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> json<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">dom4j2Json</span><span class="token punctuation">(</span><span class="token class-name">Element</span> element<span class="token punctuation">,</span> <span class="token class-name">JSONObject</span> json<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Element</span><span class="token punctuation">&gt;</span></span> chdEl <span class="token operator">=</span> element<span class="token punctuation">.</span><span class="token function">elements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Element</span> e <span class="token operator">:</span> chdEl<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>e<span class="token punctuation">.</span><span class="token function">elements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">JSONObject</span> chdjson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">dom4j2Json</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> chdjson<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Object</span> o <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">JSONArray</span> jsona <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">JSONObject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">JSONObject</span> jsono <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">JSONObject</span><span class="token punctuation">)</span> o<span class="token punctuation">;</span>
                        json<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        jsona <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        jsona<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>jsono<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        jsona<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>chdjson<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">JSONArray</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        jsona <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">JSONArray</span><span class="token punctuation">)</span> o<span class="token punctuation">;</span>
                        jsona<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>chdjson<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    json<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> jsona<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>chdjson<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        json<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> chdjson<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>e<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    json<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-在xxljob的管理界面配置任务" tabindex="-1"><a class="header-anchor" href="#_3-在xxljob的管理界面配置任务"><span>3.在xxljob的管理界面配置任务</span></a></h2>`,12),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","如何对接第三方系统.html.vue"]]),d=JSON.parse('{"path":"/java-essentials/%E5%A6%82%E4%BD%95%E5%AF%B9%E6%8E%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E7%B3%BB%E7%BB%9F.html","title":"如何对接第三方系统","lang":"zh-CN","frontmatter":{"title":"如何对接第三方系统","category":"Java必知必会","description":"1. 一般对接流程 查阅文档，找到满足要求的接口，根据文档，用postman测试，是否能够访问 访问鉴权接口，获取token 封装请求参数，请求对接接口 解析响应体 根据需求处理对接结果 telnet ip port 推送的形式 主动的访问第三方接口 2. 代码编写，建议层级 定时任务层---->业务层---->访问接口层 定时层代码示例 业务层代码示...","head":[["meta",{"property":"og:url","content":"https://snailcoding.cn/java-essentials/%E5%A6%82%E4%BD%95%E5%AF%B9%E6%8E%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E7%B3%BB%E7%BB%9F.html"}],["meta",{"property":"og:site_name","content":"蜗牛のJava宝典"}],["meta",{"property":"og:title","content":"如何对接第三方系统"}],["meta",{"property":"og:description","content":"1. 一般对接流程 查阅文档，找到满足要求的接口，根据文档，用postman测试，是否能够访问 访问鉴权接口，获取token 封装请求参数，请求对接接口 解析响应体 根据需求处理对接结果 telnet ip port 推送的形式 主动的访问第三方接口 2. 代码编写，建议层级 定时任务层---->业务层---->访问接口层 定时层代码示例 业务层代码示..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Mr.Xu"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何对接第三方系统\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Xu\\",\\"url\\":\\"https://snailcoding.cn\\"}]}"]]},"headers":[{"level":2,"title":"1. 一般对接流程","slug":"_1-一般对接流程","link":"#_1-一般对接流程","children":[]},{"level":2,"title":"2. 代码编写，建议层级","slug":"_2-代码编写-建议层级","link":"#_2-代码编写-建议层级","children":[]},{"level":2,"title":"3.在xxljob的管理界面配置任务","slug":"_3-在xxljob的管理界面配置任务","link":"#_3-在xxljob的管理界面配置任务","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":2.68,"words":803},"filePathRelative":"java-essentials/如何对接第三方系统.md","excerpt":"<h2>1. 一般对接流程</h2>\\n<ul>\\n<li>查阅文档，找到满足要求的接口，根据文档，用postman测试，是否能够访问</li>\\n<li>访问鉴权接口，获取token</li>\\n<li>封装请求参数，请求对接接口</li>\\n<li>解析响应体</li>\\n<li>根据需求处理对接结果</li>\\n</ul>\\n<p>telnet ip port</p>\\n<p>推送的形式</p>\\n<p>主动的访问第三方接口</p>\\n<h2>2. 代码编写，建议层级</h2>\\n<p>定时任务层----&gt;业务层----&gt;访问接口层</p>\\n<ul>\\n<li>\\n<p>定时层代码示例</p>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token annotation punctuation\\">@Component</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">CollectHuaWeiBigDataJob</span> <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token annotation punctuation\\">@Autowired</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">IHuaweiYunAccessBigDataService</span> huaweiYunAccessBigDataService<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token annotation punctuation\\">@XxlJob</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"collectHuaWeiCloudBigDataTenantJob\\"</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">ReturnT</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token function\\">collectEcsInstance651DataJob</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> param<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n\\n        <span class=\\"token keyword\\">long</span> start <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">currentTimeMillis</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">XxlJobLogger</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"XXL-JOB, collectHuaWeiCloudBigDataTenantJob beginning\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        huaweiYunAccessBigDataService<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">collectBigDataTenantInfo</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">XxlJobLogger</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"XXL-JOB, collectHuaWeiCloudBigDataTenantJob ending\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token class-name\\">ReturnT</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">SUCCESS</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div></li>\\n<li>\\n<p>业务层代码示例</p>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code> <span class=\\"token annotation punctuation\\">@Service</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">HuaweiYunAccessBigDataServiceImpl</span> <span class=\\"token keyword\\">implements</span> <span class=\\"token class-name\\">IHuaweiYunAccessBigDataService</span> <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token annotation punctuation\\">@Autowired</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">HuaWeiBigDataHttpUtils</span> huaWeiBigDataHttpUtils<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token annotation punctuation\\">@Override</span>\\n    <span class=\\"token annotation punctuation\\">@Transactional</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">collectBigDataTenantInfo</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">String</span> datas <span class=\\"token operator\\">=</span> huaWeiBigDataHttpUtils<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getBigDataInfo</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"url\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">//处理结果</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>datas <span class=\\"token operator\\">!=</span> <span class=\\"token keyword\\">null</span> <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token operator\\">!</span><span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">equals</span><span class=\\"token punctuation\\">(</span>datas<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token comment\\">// BigDataTenantResp bigDataTenantResp = JSONObject.parseObject(datas, BigDataTenantResp.class);</span>\\n            <span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">BigDataTenantResp</span><span class=\\"token punctuation\\">&gt;</span></span> bigDataTenantResps <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">JSONObject</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">parseArray</span><span class=\\"token punctuation\\">(</span>datas<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">BigDataTenantResp</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">CollectionUtils</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">isNotEmpty</span><span class=\\"token punctuation\\">(</span>bigDataTenantResps<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                bigDataTenantResps<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">(</span>bigDataTenantResp <span class=\\"token operator\\">-&gt;</span> <span class=\\"token punctuation\\">{</span>\\n                    <span class=\\"token comment\\">//获取集群id</span>\\n                    <span class=\\"token class-name\\">Integer</span> clusterId <span class=\\"token operator\\">=</span> bigDataTenantResp<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getClusterId</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                    <span class=\\"token comment\\">//获取租户信息</span>\\n                    <span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">BigDataTenantResp<span class=\\"token punctuation\\">.</span>Tenant</span><span class=\\"token punctuation\\">&gt;</span></span> tenants <span class=\\"token operator\\">=</span> bigDataTenantResp<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getTenants</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">CollectionUtils</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">isNotEmpty</span><span class=\\"token punctuation\\">(</span>tenants<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                        <span class=\\"token class-name\\">List</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">BigDataTenantDto</span><span class=\\"token punctuation\\">&gt;</span></span> dtos <span class=\\"token operator\\">=</span> tenants<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">stream</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">map</span><span class=\\"token punctuation\\">(</span>e <span class=\\"token operator\\">-&gt;</span> <span class=\\"token punctuation\\">{</span>\\n                            <span class=\\"token class-name\\">BigDataTenantDto</span> bigDataTenantDto <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">BigDataTenantDto</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                            bigDataTenantDto<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setClusterId</span><span class=\\"token punctuation\\">(</span>clusterId<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setParentId</span><span class=\\"token punctuation\\">(</span>e<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getParentId</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n                                    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setTenantId</span><span class=\\"token punctuation\\">(</span>e<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getId</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setTenantName</span><span class=\\"token punctuation\\">(</span>e<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getName</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setUpdateTime</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Date</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n                            <span class=\\"token keyword\\">return</span> bigDataTenantDto<span class=\\"token punctuation\\">;</span>\\n                        <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">collect</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Collectors</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toList</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n                           <span class=\\"token comment\\">//入库操作</span>\\n                           <span class=\\"token comment\\">//1、直接删除，再插入</span>\\n                           <span class=\\"token comment\\">/* bigDataTenantMapper.deleteAll();\\n                            //新增\\n                            bigDataTenantMapper.insertBatch(dtos);*/</span>\\n                        <span class=\\"token comment\\">//2、比对数据库数据，区分出需要删除的数据、需要更新的数据、需要新增的数据，分别进行对应操作</span>\\n                         <span class=\\"token comment\\">//判断出查询的设备信息，哪些需要更新的，哪些需要删除的，哪些需要新增的，分别进行操作</span>\\n                                <span class=\\"token comment\\">/*List&lt;String&gt; equipKeysOld = dceEquipInfoMapper.queryAllEquipKey();\\n                                List&lt;String&gt; equipKeysNew = dtoList.stream().map(DceEquipInfoDto::getEquipKey).collect(Collectors.toList());\\n                                //查询出需要删除的数据\\n                                equipKeysOld.forEach(key -&gt; {\\n                                    if (!equipKeysNew.contains(key)) {\\n                                        deleteList.add(key);\\n                                    }\\n                                });\\n                                //查询出需要新增或者更新的数据\\n                                dtoList.forEach(e -&gt; {\\n                                    if (!equipKeysOld.contains(e.getEquipKey())) {\\n                                        addList.add(e.setCreateTime(new Date()).setUpdateTime(new Date()));\\n                                    } else {\\n                                        updateList.add(e.setUpdateTime(new Date()));\\n                                    }\\n                                });*/</span>\\n                    <span class=\\"token punctuation\\">}</span>\\n\\n                <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n</code></pre></div></li>\\n<li>\\n<p>访问接口层代码示例</p>\\n</li>\\n</ul>","autoDesc":true}');export{r as comp,d as data};
